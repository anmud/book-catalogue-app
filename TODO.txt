1. Connect to graphql and implement basic queries:

mutation addBook {
  addBook(input: {
    author: "Pushkin"
    title: "Hello world"
    collection: "nothing"
    volume: "nothing"
    series: "nothing"
    rating: 10
    finishedPages: 50
    pages: 500
    year: "2019"
  })
}

query getBooks {
  getBooks {
    author
    title
    collection
    volume
    series
    year
    finishedPages
    progress
    rating
  }
}


const sendSms = async data =>
  await API.graphql(graphqlOperation(`
        mutation {
          sendSingleSms(input: {
            to: ${JSON.stringify(data.to)}
            from: ${JSON.stringify(data.from)}
            body: ${JSON.stringify(data.body)}
          })
        }
        `
))

// TODO
mutation deleteBook {
  deleteBook(input: {
    id: "8b5b9bf9-bca8-479f-9759-6e922c11b807"
  })
}

mutation rating {
  setRating(input: {
    id: "4e4d2b8f-8457-4b43-9dff-fb5640f1cf61"
    rating: 5
  })
}

mutation finishedPages {
  setProgress(input: {
    id: "4e4d2b8f-8457-4b43-9dff-fb5640f1cf61"
    finishedPages: 50
  })
}

mutation addNote {
  addNote(input: {
    bookId: "4e4d2b8f-8457-4b43-9dff-fb5640f1cf61"
    noteAuthor: "Anastasia"
    content: "Hello world!"
    bookPage: 50
  })
}

mutation deleteNote {
  deleteNote(input:{
    bookId: "4e4d2b8f-8457-4b43-9dff-fb5640f1cf61"
    noteId: "49dfbe9f-b373-491b-9f0f-04cb258d1a5e"
  })
}
